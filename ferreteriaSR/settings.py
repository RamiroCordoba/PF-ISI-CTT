"""
Django settings for ferreteriaSR project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
import json


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-u=_l-d*fm&_!gdm$8fo(@1^r-$@_y%03+@2$z1bv5wnms4oo9w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
  #____ App de defecto que trae Django
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
  #____ Nuestras app de la ferreteria
    'home',
    'dashboard',
    'productos',
    'reporte',
    'usuarios',

]

AUTHENTICATION_BACKENDS = [
    'usuarios.backends.EmailBackend',  
    'django.contrib.auth.backends.ModelBackend', 
]
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ferreteriaSR.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ferreteriaSR.wsgi.application'

# CI
CI_ENVIRONMENT = os.environ.get("CI") == "true"
# Base directory
BASE_DIR = Path(__file__).resolve().parent.parent
# SECRET_KEY
SECRET_KEY = os.environ.get('SECRET_KEY', 'clave-insegura-de-fallback')
# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

CI_ENVIRONMENT = os.getenv("CI", "False").lower() in ("true", "1", "yes")  # Mejor para detectar True

json_config = os.getenv("BD_PF")

if json_config:
    if json_config.startswith("'") and json_config.endswith("'"):
        json_config = json_config[1:-1]
    json_config = json_config.replace('\\\\\\\\', '\\\\')

    db_config = json.loads(json_config)
else:
    db_config = None

#print(db_config)

if CI_ENVIRONMENT:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'ci_db.sqlite3',
        }
    }
else:
    if not json_config:
        raise Exception("La variable de entorno BD_PF no está definida o está vacía.")
    DATABASES = {
        'default': json.loads(json_config)
    }
# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
AUTH_USER_MODEL = 'usuarios.UsuarioPersonalizado'

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'America/Argentina/Buenos_Aires'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = '/login/'

# Email y recuperacion de contraseña
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

PASSMAIL = os.getenv("PASS_MAIL")
EMAIL_HOST_USER = 'proyectoferreteriasr@gmail.com'
EMAIL_HOST_PASSWORD = PASSMAIL         
DEFAULT_FROM_EMAIL = 'Ferretería Santa Rita <proyectoferreteriasr@gmail.com>'
